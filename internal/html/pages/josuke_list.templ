package pages

import (
    "monkeydioude/grig/pkg/html/elements/hx"
    "monkeydioude/grig/pkg/html/elements/form"
    "monkeydioude/grig/pkg/html/elements/button"
	"monkeydioude/grig/pkg/html/elements/span"
    "monkeydioude/grig/internal/html/blocks"
	"monkeydioude/grig/internal/service/utils"
)

templ (page Josuke) Content() {
    {{ depClass := "deployments-list" }}
    {{ depSelector := ".deployments-list" }}
    {{ removeDepSelector := ".deployments-list .deployment-element" }}
    <div id="josuke" class="pb-3">
        @hx.H1("Josuke")
        @form.JsonPostForm("/api/v1/josuke") {
            @hx.H2("Base settings")
            @form.DisplayFormGroup(form.StringFormGroup("logLevel", "DEBUG, INFO, WARN, ERROR", page.Data.LogLevel)) {
                { "Log level " }
                @span.Advice() {(level of logs to display)}
            }
            @form.DisplayFormGroup(form.StringFormGroup("host", "localhost, https://...", page.Data.Host)) { Host }
            @form.DisplayFormGroup(form.NumberFormGroup("port", "8080", page.Data.Port)) { Port Josuke will listen to }
            @form.DisplayFormGroup(form.StringFormGroup("store", "/tmp/payloads", page.Data.Store).NotRequired()) {
                { "Payloads store path "}
                @span.Optional() { (optional)}
            }
            @form.DisplayFormGroup(form.StringFormGroup("healthcheck_route", "/josuke/healthcheck or empty",
            page.Data.HealthcheckRoute).NotRequired()) {
                { "Healtcheck route " } 
                @span.Optional() { (optional)}
                @span.Advice() {(should be "/josuke/healthcheck" or empty)}
            }

            // Hooks 
            <div class="hooks-list">
                @hx.H2("Hooks")
                for it, hook := range page.Data.Hook {
                    @blocks.JosukeHook(it, GetHookInputName, hook)
                }
            </div>
            @button.AjaxBlockButton("/josuke/hook/block", ".hooks-list") { + Hook }

            // Deployments
            <div class={depClass}>
                @hx.H2("Deployments")
                for dIt, dep := range page.Data.Deployment {
                    {{ dep.SetParent(nil) }}
                    {{ dep.SetIndex(dIt)}}
                    @blocks.JosukeDeployment(GetInputNameWithKey, utils.GetInputName, dep)
                }
            </div>
            <div class="my-2">
                @button.AjaxBlockButton("/josuke/deployment/block", depSelector, "rounded-none rounded-s mr-0") { + Deployment }
                @button.RemoveLastOf(removeDepSelector, "rounded-none rounded-e") { - Deployment }
            </div>
        }
    </div>
}