package pages

import (
    "monkeydioude/grig/internal/html/elements/hx"
    "monkeydioude/grig/internal/html/elements/form"
    "monkeydioude/grig/internal/html/elements/button"
)

templ (page Capybara) Content() {
    <div id="capybara" class="pb-3">
        @hx.H1("Capybara")
        @form.JsonPostForm("/api/v1/capybara") {
            <!-- Proxy Configuration -->
            @hx.H2("Proxy")
            @form.DisplayFormGroup(form.NumberFormGroup("proxy[port]", "80 or 443 for example", page.Data.Proxy.Port)) { Reverse-Proxy Port }
            @form.DisplayFormGroup(form.StringFormGroup("proxy[tls_host]", "TLS Host", page.Data.Proxy.TLSHost)) { TLS Host }

            <!-- Services Configuration -->
            <div class="services-container" id="servicesContainer">
                @hx.H2("Services")
                for it, service := range page.Data.Services {
                <div class="service-block bg-slate-800 border-gray-900 border-1 rounded p-4 mb-2.5">
                    @form.DisplayFormGroup(form.StringFormGroup(page.GetServiceInputName(it, "id"), "Service name", service.ID)) { Name }
                    @form.DisplayFormGroup(form.StringFormGroup(page.GetServiceInputName(it, "method"), "string, regex etc...", service.Method)) { Method }
                    @form.DisplayFormGroup(form.StringFormGroup(page.GetServiceInputName(it, "pattern"), "/api/vault_hunter", service.Pattern)) { Pattern }
                    @form.DisplayFormGroup(form.NumberFormGroup(page.GetServiceInputName(it, "port"), "Port of the service", service.Port)) { Port }
                    @button.RemoveParentButton() { Delete }
                </div>
                }
            </div>
            
            <!-- Add Service Button -->
            @button.AddButton("addServiceButton", "") { + Add a New Service }
        }
        <div id="shadow-form" class="hidden">
            @form.EmptyFormGroup()
            @button.RemoveParentButton() { Delete }
        </div>
    </div>
}