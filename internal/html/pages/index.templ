package pages

import (
    "monkeydioude/grig/internal/model"
	"monkeydioude/grig/pkg/html/elements/hr"
    "monkeydioude/grig/pkg/html/elements/hx"
    "monkeydioude/grig/pkg/html/elements/a"
	"strings"
)

templ configContentBlock(title, value string) {
    <div class="flex flex-row">
        <div class="highlighted p-1 text-lg text-sky-500">{title}</div>
        <div class="content p-1 text-lg">{value}</div>
    </div>
}

templ capybaraConfigBlock(capy *model.Capybara) {
    <div class="capy-config">
        {{ servicesLen := len(capy.Services)}}
        <div class="config-content">
            @hx.H1("Capybara")
            <div>
                @hx.H2("Proxy")
                @configContentBlock("Port", capy.Proxy.Port.String())
                @configContentBlock("Host", capy.Proxy.TLSHost)
                @hx.H2("Services")
                for it, service := range capy.Services {
                    <div class="pb-5">
                        @configContentBlock("Name", service.ID)
                        @configContentBlock("Method", service.Method)
                        @configContentBlock("Pattern", service.Pattern)
                        @configContentBlock("Port", service.Port.String())
                    </div>
                    @hr.Default(it < servicesLen -1)
                }
            </div>
            @a.Internal("/capybara") { Edit Capybara Config }
        </div>
    </div>
}

templ josukeConfigBlock(josuke *model.Josuke) {
    {{ depLen := len(josuke.Deployment)}}
    <div class="josuke-config">
        <div class="config-content">
            @hx.H1("Josuke")
            <div>
                @hx.H2("Base settings")
                @configContentBlock("Log level", josuke.LogLevel)
                @configContentBlock("Host", josuke.Host)
                @configContentBlock("Port", josuke.Port.String())
                @configContentBlock("Payloads store", josuke.Store)
                @configContentBlock("Healthcheck", josuke.HealthcheckRoute)
                @hx.H2("Hooks")
                for _, hook := range josuke.Hook {
                    <div class="pb-5">
                        @configContentBlock("Name", hook.Name)
                        @configContentBlock("Type", hook.Type)
                        @configContentBlock("Path", hook.Path)
                        @configContentBlock("Secret", hook.Secret)
                    </div>
                }
                @hx.H2("Deployments")
                for it, dep := range josuke.Deployment {
                    <div class="pb-5">
                        @configContentBlock("Repo", dep.Repo)
                        @configContentBlock("Project dir", dep.ProjDir)
                        @configContentBlock("Base dir", dep.BaseDir)
                        @hx.H3("Branches")
                        for _, branch := range dep.Branches {
                            <div class="pb-5">
                                @configContentBlock("Branch", branch.Branch)
                                @configContentBlock("Project dir", dep.ProjDir)
                                @configContentBlock("Base dir", dep.BaseDir)
                                for _, action := range branch.Actions {
                                    <div>
                                        @configContentBlock("Action", action.Action)
                                        <div class="highlighted p-1 text-lg text-sky-500">Commands</div>
                                        <ul class="list-disc ml-2.5 pl-3">
                                            for _, cmd := range action.Commands {
                                                <li class="text-lg text-emerald-600">
                                                    {strings.Join(cmd.Command, " ")}
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                    @hr.Default(it < depLen -1)
                }
                @a.Internal("/josuke") { Edit Josuke Config }
            </div>
        </div>
    </div>
}

templ (page IndexPage) Content() {
    <div id="index" class="pb-4">
        if page.Err != nil {
            <div class="error-block">{page.Err.Error()}</div>
        }
        if page.Capybara != nil {
            @capybaraConfigBlock(page.Capybara)
        } else {
            <div>Error loading capybara config</div>
        }
        if page.Josuke != nil {
            @josukeConfigBlock(page.Josuke)
        } else {
            <div>Error loading josuke config</div>
        }
    </div>
}